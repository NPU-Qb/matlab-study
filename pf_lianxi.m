clear
%%观测方程在观测初始与更新步上
%特点：调试起来很麻烦
%如果问题问题本身强非线性，如多峰分布，粒子滤波效果不好
%预测方程和观测方程都是多峰的直接GG，有一个单峰调试参数或许可以救
%粒子滤波计算速度不理想，占内存多

%x(i)=sin(x(x-1))+5*x(i-1)/x(x-1)^2+1)+Q
%y(i)=x(i)^2+R
%此处预测方程和观测方程写成观测方程  即xk=f(xk-1)
%因为大多数方程表达为  x=f(t) 不能得到递推
%此处需要转换xk=f(xk-1)   涉及到数值分析解法

%观测值生成
t=0.01:0.01:1;
x=zeros(1,100);
y=zeros(1,100);
%此处t只是用来画图，卡尔曼滤波中牵扯到dt
%%设定初始值
x(1)=0.1;
y(1)=0.01;
%%生成真实与观测数据
for i=2:100
    x(i)=sin(x(i-1))+5*x(i-1)/(x(i-1)^2+1);
    y(i)=x(i)^2+normrnd(0,1);
end
%查验生成信号样子
% plot(t,x,t,y,'LineWidth',2)
%%粒子滤波
%粒子集合设置
n=100;
xold=zeros(1,n);%重采样之前
xnew=zeros(1,n);%重采样之后
xplus=zeros(1,100);%后验值（滤波结果）
w=zeros(1,n);%放权重
%设置原始粒子，可以通过对正态分布采样获得，若初值准确也可选择所有粒子相同
for i=1:n
    xold(i)=0.1;
    w(i)=1/n;
end
%粒子滤波核心代码
for i=2:100
    %预测步
    for j=1:n
        xold(j)=sin(xold(j))+5*xold(j)/(xold(j)^2+1)+normrnd(0,1);
    end
    %更新步  粒子用似然概率更新一下
    for j=1:n
        %w（j)=w(j)*fR(.......)
        %fR=(2*pi*R)^(-0.5)*exp(-((y(i)-xold(j)^2)^2/(2*R)))
        %所以应该是： w(j)=w(j)*(2*pi*R)^(-0.5)*exp(-((y(i)-xold(j)^2)^2/(2*R)));
        %此处去掉w(j)*(2*pi*R)      ???为什么
        R=0.001;
        w(j)=exp(-((y(i)-xold(j)^2)^2/(2*R)));
    end

        %归一化
        w=w/sum(w);
        %归一化性质： w/sum(w)与k*w/sum（k*w)一致
        %(2*pi*R)是常数，w(j)每次都重采样的话 都为1/n,可以去掉

        %重采样
        %N<1/sum(wi^2),如果不是每次都重采样，则需要乘w(j)
        %生成数组c
        c=zeros(1,n);
        c(1)=w(1);
        for j=2:n
            c(j)=c(j-1)+w(j);
        end
        %生成随机数，看分布情况
        %首先重采样n个粒子，粒子数要与初始粒子相同
        %多的话速度降低，少的话精度降低
        for j=1:n
            a=unifrnd(0,1);%均匀分布的随机数
            for k=1:n
                if (a<c(k))
                    xnew(j)=xold(k);
                    break;%十分重要  否则重采样的粒子始终会被最后一个覆盖；
                end
            end
        end
        %新粒子赋值给旧粒子xold，准备下一步递推；
        xold=xnew;
        %权重均设为n/1
        for j=1:n
            w(j)=1/n;
        end
        %更新每一步的后验
        xplus(i)=sum(xnew)/n;
        %这里是因为每一步权重都是1/n所以可以这么写
end

plot(t,x,'r',t,xplus,'b','LineWidth',2)

                 
                 









